

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Apr 05 19:40:12 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 12/10/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F887 Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0004                     fsr             equ	4
    45     0004                     fsr0            equ	4
    46     0000                     indf            equ	0
    47     0000                     indf0           equ	0
    48     0002                     pc              equ	2
    49     0002                     pcl             equ	2
    50     000A                     pclath          equ	10
    51     0003                     status          equ	3
    52     0000                     INDF            equ	0	;# 
    53     0001                     TMR0            equ	1	;# 
    54     0002                     PCL             equ	2	;# 
    55     0003                     STATUS          equ	3	;# 
    56     0004                     FSR             equ	4	;# 
    57     0005                     PORTA           equ	5	;# 
    58     0006                     PORTB           equ	6	;# 
    59     0007                     PORTC           equ	7	;# 
    60     0008                     PORTD           equ	8	;# 
    61     0009                     PORTE           equ	9	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000D                     PIR2            equ	13	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0013                     SSPBUF          equ	19	;# 
    73     0014                     SSPCON          equ	20	;# 
    74     0015                     CCPR1           equ	21	;# 
    75     0015                     CCPR1L          equ	21	;# 
    76     0016                     CCPR1H          equ	22	;# 
    77     0017                     CCP1CON         equ	23	;# 
    78     0018                     RCSTA           equ	24	;# 
    79     0019                     TXREG           equ	25	;# 
    80     001A                     RCREG           equ	26	;# 
    81     001B                     CCPR2           equ	27	;# 
    82     001B                     CCPR2L          equ	27	;# 
    83     001C                     CCPR2H          equ	28	;# 
    84     001D                     CCP2CON         equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     0088                     TRISD           equ	136	;# 
    92     0089                     TRISE           equ	137	;# 
    93     008C                     PIE1            equ	140	;# 
    94     008D                     PIE2            equ	141	;# 
    95     008E                     PCON            equ	142	;# 
    96     008F                     OSCCON          equ	143	;# 
    97     0090                     OSCTUNE         equ	144	;# 
    98     0091                     SSPCON2         equ	145	;# 
    99     0092                     PR2             equ	146	;# 
   100     0093                     SSPADD          equ	147	;# 
   101     0093                     SSPMSK          equ	147	;# 
   102     0093                     MSK             equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0095                     WPUB            equ	149	;# 
   105     0096                     IOCB            equ	150	;# 
   106     0097                     VRCON           equ	151	;# 
   107     0098                     TXSTA           equ	152	;# 
   108     0099                     SPBRG           equ	153	;# 
   109     009A                     SPBRGH          equ	154	;# 
   110     009B                     PWM1CON         equ	155	;# 
   111     009C                     ECCPAS          equ	156	;# 
   112     009D                     PSTRCON         equ	157	;# 
   113     009E                     ADRESL          equ	158	;# 
   114     009F                     ADCON1          equ	159	;# 
   115     0105                     WDTCON          equ	261	;# 
   116     0107                     CM1CON0         equ	263	;# 
   117     0108                     CM2CON0         equ	264	;# 
   118     0109                     CM2CON1         equ	265	;# 
   119     010C                     EEDATA          equ	268	;# 
   120     010C                     EEDAT           equ	268	;# 
   121     010D                     EEADR           equ	269	;# 
   122     010E                     EEDATH          equ	270	;# 
   123     010F                     EEADRH          equ	271	;# 
   124     0185                     SRCON           equ	389	;# 
   125     0187                     BAUDCTL         equ	391	;# 
   126     0188                     ANSEL           equ	392	;# 
   127     0189                     ANSELH          equ	393	;# 
   128     018C                     EECON1          equ	396	;# 
   129     018D                     EECON2          equ	397	;# 
   130     0000                     INDF            equ	0	;# 
   131     0001                     TMR0            equ	1	;# 
   132     0002                     PCL             equ	2	;# 
   133     0003                     STATUS          equ	3	;# 
   134     0004                     FSR             equ	4	;# 
   135     0005                     PORTA           equ	5	;# 
   136     0006                     PORTB           equ	6	;# 
   137     0007                     PORTC           equ	7	;# 
   138     0008                     PORTD           equ	8	;# 
   139     0009                     PORTE           equ	9	;# 
   140     000A                     PCLATH          equ	10	;# 
   141     000B                     INTCON          equ	11	;# 
   142     000C                     PIR1            equ	12	;# 
   143     000D                     PIR2            equ	13	;# 
   144     000E                     TMR1            equ	14	;# 
   145     000E                     TMR1L           equ	14	;# 
   146     000F                     TMR1H           equ	15	;# 
   147     0010                     T1CON           equ	16	;# 
   148     0011                     TMR2            equ	17	;# 
   149     0012                     T2CON           equ	18	;# 
   150     0013                     SSPBUF          equ	19	;# 
   151     0014                     SSPCON          equ	20	;# 
   152     0015                     CCPR1           equ	21	;# 
   153     0015                     CCPR1L          equ	21	;# 
   154     0016                     CCPR1H          equ	22	;# 
   155     0017                     CCP1CON         equ	23	;# 
   156     0018                     RCSTA           equ	24	;# 
   157     0019                     TXREG           equ	25	;# 
   158     001A                     RCREG           equ	26	;# 
   159     001B                     CCPR2           equ	27	;# 
   160     001B                     CCPR2L          equ	27	;# 
   161     001C                     CCPR2H          equ	28	;# 
   162     001D                     CCP2CON         equ	29	;# 
   163     001E                     ADRESH          equ	30	;# 
   164     001F                     ADCON0          equ	31	;# 
   165     0081                     OPTION_REG      equ	129	;# 
   166     0085                     TRISA           equ	133	;# 
   167     0086                     TRISB           equ	134	;# 
   168     0087                     TRISC           equ	135	;# 
   169     0088                     TRISD           equ	136	;# 
   170     0089                     TRISE           equ	137	;# 
   171     008C                     PIE1            equ	140	;# 
   172     008D                     PIE2            equ	141	;# 
   173     008E                     PCON            equ	142	;# 
   174     008F                     OSCCON          equ	143	;# 
   175     0090                     OSCTUNE         equ	144	;# 
   176     0091                     SSPCON2         equ	145	;# 
   177     0092                     PR2             equ	146	;# 
   178     0093                     SSPADD          equ	147	;# 
   179     0093                     SSPMSK          equ	147	;# 
   180     0093                     MSK             equ	147	;# 
   181     0094                     SSPSTAT         equ	148	;# 
   182     0095                     WPUB            equ	149	;# 
   183     0096                     IOCB            equ	150	;# 
   184     0097                     VRCON           equ	151	;# 
   185     0098                     TXSTA           equ	152	;# 
   186     0099                     SPBRG           equ	153	;# 
   187     009A                     SPBRGH          equ	154	;# 
   188     009B                     PWM1CON         equ	155	;# 
   189     009C                     ECCPAS          equ	156	;# 
   190     009D                     PSTRCON         equ	157	;# 
   191     009E                     ADRESL          equ	158	;# 
   192     009F                     ADCON1          equ	159	;# 
   193     0105                     WDTCON          equ	261	;# 
   194     0107                     CM1CON0         equ	263	;# 
   195     0108                     CM2CON0         equ	264	;# 
   196     0109                     CM2CON1         equ	265	;# 
   197     010C                     EEDATA          equ	268	;# 
   198     010C                     EEDAT           equ	268	;# 
   199     010D                     EEADR           equ	269	;# 
   200     010E                     EEDATH          equ	270	;# 
   201     010F                     EEADRH          equ	271	;# 
   202     0185                     SRCON           equ	389	;# 
   203     0187                     BAUDCTL         equ	391	;# 
   204     0188                     ANSEL           equ	392	;# 
   205     0189                     ANSELH          equ	393	;# 
   206     018C                     EECON1          equ	396	;# 
   207     018D                     EECON2          equ	397	;# 
   208     001D                     _CCP2CONbits    set	29
   209     001B                     _CCPR2L         set	27
   210     0012                     _T2CON          set	18
   211     001D                     _CCP2CON        set	29
   212     001F                     _ADCON0         set	31
   213     0007                     _PORTC          set	7
   214     001E                     _ADRESH         set	30
   215     001F                     _ADCON0bits     set	31
   216     00F9                     _GO_nDONE       set	249
   217     0092                     _PR2            set	146
   218     009F                     _ADCON1         set	159
   219     0087                     _TRISC          set	135
   220     0085                     _TRISA          set	133
   221     009E                     _ADRESL         set	158
   222                           
   223                           	psect	cinit
   224     07FC                     start_initialization:	
   225                           ; #config settings
   226                           
   227     07FC                     __initialization:
   228     07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231     07FC                     __end_of__initialization:
   232     07FC  0183               	clrf	3
   233     07FD  120A  118A  2FB8   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	cstackCOMMON
   236     0070                     __pcstackCOMMON:
   237     0070                     ?_main:
   238     0070                     ?_ADC_Read:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 2 bytes @ 0x0
   243     0070                     	ds	2
   244     0072                     ??_ADC_Read:
   245                           
   246                           ; 1 bytes @ 0x2
   247     0072                     	ds	1
   248     0073                     ??_main:
   249                           
   250                           ; 1 bytes @ 0x3
   251     0073                     	ds	2
   252     0075                     main@ADCResult:
   253                           
   254                           ; 2 bytes @ 0x5
   255     0075                     	ds	2
   256                           
   257                           	psect	maintext
   258     07B8                     __pmaintext:	
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 20 in file "PWM.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  ADCResult       2    5[COMMON] unsigned int 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, status,2, status,0, pclath, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : B00/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   278 ;;      Params:         0       0       0       0       0
   279 ;;      Locals:         2       0       0       0       0
   280 ;;      Temps:          2       0       0       0       0
   281 ;;      Totals:         4       0       0       0       0
   282 ;;Total ram usage:        4 bytes
   283 ;; Hardware stack levels required when called: 1
   284 ;; This function calls:
   285 ;;		_ADC_Read
   286 ;; This function is called by:
   287 ;;		Startup code after reset
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291     07B8                     _main:	
   292                           ;psect for function _main
   293                           
   294     07B8                     l630:	
   295                           ;incstack = 0
   296                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   297                           
   298                           
   299                           ;PWM.c: 21:     unsigned int ADCResult;;PWM.c: 24:     TRISA = 0b00001000;
   300     07B8  3008               	movlw	8
   301     07B9  1683               	bsf	3,5	;RP0=1, select bank1
   302     07BA  1303               	bcf	3,6	;RP1=0, select bank1
   303     07BB  0085               	movwf	5	;volatile
   304     07BC                     l632:
   305                           
   306                           ;PWM.c: 25:     TRISC = 0b00000000;
   307     07BC  0187               	clrf	7	;volatile
   308                           
   309                           ;PWM.c: 26:     PORTC = 0x00;
   310     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   311     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   312     07BF  0187               	clrf	7	;volatile
   313     07C0                     l634:
   314                           
   315                           ;PWM.c: 29:     ADCON0 = 0b10000001;
   316     07C0  3081               	movlw	129
   317     07C1  009F               	movwf	31	;volatile
   318     07C2                     l636:
   319                           
   320                           ;PWM.c: 30:     ADCON1 = 0b10000000;
   321     07C2  3080               	movlw	128
   322     07C3  1683               	bsf	3,5	;RP0=1, select bank1
   323     07C4  1303               	bcf	3,6	;RP1=0, select bank1
   324     07C5  009F               	movwf	31	;volatile
   325     07C6                     l638:
   326                           
   327                           ;PWM.c: 33:     PR2 = 0xFF;
   328     07C6  30FF               	movlw	255
   329     07C7  0092               	movwf	18	;volatile
   330     07C8                     l640:
   331                           
   332                           ;PWM.c: 34:     CCP2CON = 0b00001100;
   333     07C8  300C               	movlw	12
   334     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   335     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   336     07CB  009D               	movwf	29	;volatile
   337     07CC                     l642:
   338                           
   339                           ;PWM.c: 35:     T2CON = 0b00000100;
   340     07CC  3004               	movlw	4
   341     07CD  0092               	movwf	18	;volatile
   342     07CE                     l644:
   343                           
   344                           ;PWM.c: 38:         ADCResult = ADC_Read();
   345     07CE  120A  118A  27A0  120A  118A  	fcall	_ADC_Read
   346     07D3  0871               	movf	?_ADC_Read+1,w
   347     07D4  00F6               	movwf	main@ADCResult+1
   348     07D5  0870               	movf	?_ADC_Read,w
   349     07D6  00F5               	movwf	main@ADCResult
   350     07D7                     l646:
   351                           
   352                           ;PWM.c: 41:         CCPR2L = (ADCResult >> 2);
   353     07D7  0876               	movf	main@ADCResult+1,w
   354     07D8  00F4               	movwf	??_main+1
   355     07D9  0875               	movf	main@ADCResult,w
   356     07DA  00F3               	movwf	??_main
   357     07DB  1003               	clrc
   358     07DC  0CF4               	rrf	??_main+1,f
   359     07DD  0CF3               	rrf	??_main,f
   360     07DE  1003               	clrc
   361     07DF  0CF4               	rrf	??_main+1,f
   362     07E0  0CF3               	rrf	??_main,f
   363     07E1  0873               	movf	??_main,w
   364     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   365     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   366     07E4  009B               	movwf	27	;volatile
   367     07E5                     l648:
   368                           
   369                           ;PWM.c: 42:         CCP2CONbits.DC2B0 = (ADCResult & 0b01);
   370     07E5  0875               	movf	main@ADCResult,w
   371     07E6  3901               	andlw	1
   372     07E7  00F3               	movwf	??_main
   373     07E8  0EF3               	swapf	??_main,f
   374     07E9  081D               	movf	29,w	;volatile
   375     07EA  0673               	xorwf	??_main,w
   376     07EB  39EF               	andlw	-17
   377     07EC  0673               	xorwf	??_main,w
   378     07ED  009D               	movwf	29	;volatile
   379     07EE                     l650:
   380                           
   381                           ;PWM.c: 43:         CCP2CONbits.DC2B1 = (ADCResult & 0b10);
   382     07EE  0875               	movf	main@ADCResult,w
   383     07EF  3902               	andlw	2
   384     07F0  00F3               	movwf	??_main
   385     07F1  0EF3               	swapf	??_main,f
   386     07F2  0DF3               	rlf	??_main,f
   387     07F3  081D               	movf	29,w	;volatile
   388     07F4  0673               	xorwf	??_main,w
   389     07F5  39DF               	andlw	-33
   390     07F6  0673               	xorwf	??_main,w
   391     07F7  009D               	movwf	29	;volatile
   392     07F8  2FCE               	goto	l644
   393     07F9  120A  118A  2800   	ljmp	start
   394     07FC                     __end_of_main:
   395                           
   396                           	psect	text1
   397     07A0                     __ptext1:	
   398 ;; *************** function _ADC_Read *****************
   399 ;; Defined at:
   400 ;;		line 12 in file "PWM.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  2    0[COMMON] unsigned int 
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   414 ;;      Params:         2       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0
   416 ;;      Temps:          1       0       0       0       0
   417 ;;      Totals:         3       0       0       0       0
   418 ;;Total ram usage:        3 bytes
   419 ;; Hardware stack levels used: 1
   420 ;; This function calls:
   421 ;;		Nothing
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427     07A0                     _ADC_Read:	
   428                           ;psect for function _ADC_Read
   429                           
   430     07A0                     l620:	
   431                           ;incstack = 0
   432                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   433                           
   434                           
   435                           ;PWM.c: 13:     ADCON0bits.CHS = 0b0011;
   436     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   437     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   438     07A2  081F               	movf	31,w	;volatile
   439     07A3  39C3               	andlw	-61
   440     07A4  380C               	iorlw	12
   441     07A5  009F               	movwf	31	;volatile
   442     07A6                     l622:
   443                           
   444                           ;PWM.c: 14:     _delay((unsigned long)((25)*(4000000/4000000.0)));
   445     07A6  3008               	movlw	8
   446     07A7  00F2               	movwf	??_ADC_Read
   447     07A8                     u37:
   448     07A8  0BF2               	decfsz	??_ADC_Read,f
   449     07A9  2FA8               	goto	u37
   450     07AA                     l624:
   451                           
   452                           ;PWM.c: 15:     GO_nDONE = 1;
   453     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   454     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   455     07AC  149F               	bsf	31,1	;volatile
   456     07AD                     l33:	
   457                           ;PWM.c: 16:     while(GO_nDONE);
   458                           
   459     07AD  189F               	btfsc	31,1	;volatile
   460     07AE  2FB0               	goto	u21
   461     07AF  2FB1               	goto	u20
   462     07B0                     u21:
   463     07B0  2FAD               	goto	l33
   464     07B1                     u20:
   465     07B1                     l626:
   466                           
   467                           ;PWM.c: 17:     return ((ADRESH << 8) | ADRESL);
   468     07B1  081E               	movf	30,w	;volatile
   469     07B2  00F1               	movwf	?_ADC_Read+1
   470     07B3  1683               	bsf	3,5	;RP0=1, select bank1
   471     07B4  1303               	bcf	3,6	;RP1=0, select bank1
   472     07B5  081E               	movf	30,w	;volatile
   473     07B6  00F0               	movwf	?_ADC_Read
   474     07B7                     l36:
   475     07B7  0008               	return
   476     07B8                     __end_of_ADC_Read:
   477     0002                     ___latbits      equ	2
   478     007E                     btemp           set	126	;btemp
   479     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      67
                                              3 COMMON     4     4      0
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Apr 05 19:40:12 2025

                     l33 07AD                       l36 07B7                       u20 07B1  
                     u21 07B0                       u37 07A8                      l620 07A0  
                    l622 07A6                      l630 07B8                      l624 07AA  
                    l640 07C8                      l632 07BC                      l626 07B1  
                    l650 07EE                      l642 07CC                      l634 07C0  
                    l644 07CE                      l636 07C2                      l646 07D7  
                    l638 07C6                      l648 07E5                      _PR2 0092  
                   _main 07B8                     btemp 007E         __end_of_ADC_Read 07B8  
                   start 0000                    ?_main 0070                    _T2CON 0012  
                  _PORTC 0007                    _TRISA 0085                    _TRISC 0087  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0073                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR2L 001B                ?_ADC_Read 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               ??_ADC_Read 0072               __pmaintext 07B8  
                _CCP2CON 001D                  __ptext1 07A0     end_of_initialization 07FC  
            _CCP2CONbits 001D      start_initialization 07FC                ___latbits 0002  
               _ADC_Read 07A0                 _GO_nDONE 00F9               _ADCON0bits 001F  
          main@ADCResult 0075  
